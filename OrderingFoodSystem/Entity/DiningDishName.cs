//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Dos.ORM;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace EntityManager
{
    /// <summary>
    /// 实体类DiningDishName。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("DiningDishName")]
    [Serializable]
    public partial class DiningDishName : Entity
    {
        #region Model
		private int? _ID;
		private string _CookingClass;
		private string _CookingType;
		private string _DishName;
		private string _Img;
		private string _Description;
		private decimal? _Price;
		private string _CREATEUSER;
		private DateTime? _CREATEDATE;
		private string _MODIFYUSER;
		private DateTime? _MODIFYDATE;
		private DateTime _ROWVERSION;
		private string _DateType;

		/// <summary>
		/// 
		/// </summary>
		[Field("ID")]
		public int? ID
		{
			get{ return _ID; }
			set
			{
				this.OnPropertyValueChange("ID");
				this._ID = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("CookingClass")]
        [DisplayName("菜系")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "不能为空")]
        public string CookingClass
		{
			get{ return _CookingClass; }
			set
			{
				this.OnPropertyValueChange("CookingClass");
				this._CookingClass = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("CookingType")]
        [DisplayName("类别")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "不能为空")]
        public string CookingType
		{
			get{ return _CookingType; }
			set
			{
				this.OnPropertyValueChange("CookingType");
				this._CookingType = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("DishName")]
        [DisplayName("菜名")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "不能为空")]
        public string DishName
		{
			get{ return _DishName; }
			set
			{
				this.OnPropertyValueChange("DishName");
				this._DishName = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Img")]
        [DisplayName("图片")]
        public string Img
		{
			get{ return _Img; }
			set
			{
				this.OnPropertyValueChange("Img");
				this._Img = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Description")]
        [DisplayName("描述")]
        public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange("Description");
				this._Description = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Price")]
        [DisplayName("单价")]
        [DataType(DataType.Currency, ErrorMessage = "只能是整数或小数")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "不能为空")]
        public decimal? Price
		{
			get{ return _Price; }
			set
			{
				this.OnPropertyValueChange("Price");
				this._Price = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("CREATEUSER")]
		public string CREATEUSER
		{
			get{ return _CREATEUSER; }
			set
			{
				this.OnPropertyValueChange("CREATEUSER");
				this._CREATEUSER = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("CREATEDATE")]
		public DateTime? CREATEDATE
		{
			get{ return _CREATEDATE; }
			set
			{
				this.OnPropertyValueChange("CREATEDATE");
				this._CREATEDATE = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("MODIFYUSER")]
		public string MODIFYUSER
		{
			get{ return _MODIFYUSER; }
			set
			{
				this.OnPropertyValueChange("MODIFYUSER");
				this._MODIFYUSER = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("MODIFYDATE")]
		public DateTime? MODIFYDATE
		{
			get{ return _MODIFYDATE; }
			set
			{
				this.OnPropertyValueChange("MODIFYDATE");
				this._MODIFYDATE = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("ROWVERSION")]
		public DateTime ROWVERSION
		{
			get{ return _ROWVERSION; }
			set
			{
				this.OnPropertyValueChange("ROWVERSION");
				this._ROWVERSION = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("DateType")]
        [DisplayName("班别")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "班别不能为空")]
        [StringLength(1,ErrorMessage = "班别不能为空")]
        public string DateType
		{
			get{ return _DateType; }
			set
			{
				this.OnPropertyValueChange("DateType");
				this._DateType = value;
			}
		}
		#endregion

		#region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
			};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.ID,
				_.CookingClass,
				_.CookingType,
				_.DishName,
				_.Img,
				_.Description,
				_.Price,
				_.CREATEUSER,
				_.CREATEDATE,
				_.MODIFYUSER,
				_.MODIFYDATE,
				_.ROWVERSION,
				_.DateType,
			};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._ID,
				this._CookingClass,
				this._CookingType,
				this._DishName,
				this._Img,
				this._Description,
				this._Price,
				this._CREATEUSER,
				this._CREATEDATE,
				this._MODIFYUSER,
				this._MODIFYDATE,
				this._ROWVERSION,
				this._DateType,
			};
        }
        /// <summary>
        /// 是否是v1.10.5.6及以上版本实体。
        /// </summary>
        /// <returns></returns>
        public override bool V1_10_5_6_Plus()
        {
            return true;
        }
        #endregion

		#region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*", "DiningDishName");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field ID = new Field("ID", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field CookingClass = new Field("CookingClass", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field CookingType = new Field("CookingType", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field DishName = new Field("DishName", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Img = new Field("Img", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Description = new Field("Description", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Price = new Field("Price", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field CREATEUSER = new Field("CREATEUSER", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field CREATEDATE = new Field("CREATEDATE", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field MODIFYUSER = new Field("MODIFYUSER", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field MODIFYDATE = new Field("MODIFYDATE", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field ROWVERSION = new Field("ROWVERSION", "DiningDishName", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field DateType = new Field("DateType", "DiningDishName", "");
        }
        #endregion
	}
}